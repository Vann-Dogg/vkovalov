{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/user/Documents/domains/vkovalov/components/Particles.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nvar Canvas = /*#__PURE__*/function (_Component) {\n  _inherits(Canvas, _Component);\n\n  var _super = _createSuper(Canvas);\n\n  function Canvas() {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: \"0px\",\n      height: \"0px\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateWindowDimensions\", function () {\n      _this.setState({\n        width: \"\".concat(window.innerWidth, \"px\"),\n        height: \"\".concat(window.innerHeight, \"px\")\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n      console.log(width, height);\n      return __jsx(Particles, _extends({}, this.state, {\n        params: {\n          particles: {\n            number: {\n              value: 30,\n              density: {\n                enable: true,\n                value_area: 800\n              }\n            },\n            color: {\n              value: \"#ffffff\"\n            },\n            shape: {\n              type: \"circle\",\n              stroke: {\n                width: 0,\n                color: \"#000000\"\n              },\n              image: {\n                src: \"img/github.svg\",\n                width: 100,\n                height: 100\n              }\n            },\n            opacity: {\n              value: 0.4,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: false\n              }\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 2,\n                size_min: 0.1,\n                sync: false\n              }\n            },\n            line_linked: {\n              enable_auto: true,\n              distance: 100,\n              color: \"#fff\",\n              opacity: 1,\n              width: 1,\n              condensed_mode: {\n                enable: false,\n                rotateX: 600,\n                rotateY: 600\n              }\n            },\n            move: {\n              enable: true,\n              speed: 1,\n              direction: \"none\",\n              random: false,\n              straight: false,\n              out_mode: \"out\",\n              bounce: false,\n              attract: {\n                enable: false,\n                rotateX: 600,\n                rotateY: 1200\n              }\n            }\n          },\n          interactivity: {\n            detect_on: \"canvas\",\n            events: {\n              onhover: {\n                enable: false\n              },\n              onclick: {\n                enable: false\n              },\n              resize: true\n            }\n          },\n          retina_detect: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/user/Documents/domains/vkovalov/components/Particles.js"],"names":["React","Component","Particles","Canvas","width","height","setState","window","innerWidth","innerHeight","updateWindowDimensions","addEventListener","removeEventListener","state","console","log","particles","number","value","density","enable","value_area","color","shape","type","stroke","image","src","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","enable_auto","distance","condensed_mode","rotateX","rotateY","move","direction","straight","out_mode","bounce","attract","interactivity","detect_on","events","onhover","onclick","resize","retina_detect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nclass Canvas extends Component {\n  state = { width: \"0px\", height: \"0px\" };\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  updateWindowDimensions = () => {\n    this.setState({\n      width: `${window.innerWidth}px`,\n      height: `${window.innerHeight}px`\n    });\n  };\n  render() {\n    const { width, height } = this.state;\n    console.log(width, height);\n    return (\n      <Particles\n        {...this.state}\n        params={{\n          particles: {\n            number: {\n              value: 30,\n              density: {\n                enable: true,\n                value_area: 800\n              }\n            },\n            color: {\n              value: \"#ffffff\"\n            },\n            shape: {\n              type: \"circle\",\n              stroke: {\n                width: 0,\n                color: \"#000000\"\n              },\n              image: {\n                src: \"img/github.svg\",\n                width: 100,\n                height: 100\n              }\n            },\n            opacity: {\n              value: 0.4,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: false\n              }\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 2,\n                size_min: 0.1,\n                sync: false\n              }\n            },\n            line_linked: {\n              enable_auto: true,\n              distance: 100,\n              color: \"#fff\",\n              opacity: 1,\n              width: 1,\n              condensed_mode: {\n                enable: false,\n                rotateX: 600,\n                rotateY: 600\n              }\n            },\n            move: {\n              enable: true,\n              speed: 1,\n              direction: \"none\",\n              random: false,\n              straight: false,\n              out_mode: \"out\",\n              bounce: false,\n              attract: {\n                enable: false,\n                rotateX: 600,\n                rotateY: 1200\n              }\n            }\n          },\n          interactivity: {\n            detect_on: \"canvas\",\n            events: {\n              onhover: {\n                enable: false\n              },\n              onclick: {\n                enable: false\n              },\n              resize: true\n            }\n          },\n          retina_detect: true\n        }}\n      />\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}