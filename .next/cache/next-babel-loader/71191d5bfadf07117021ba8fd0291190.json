{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/user/Documents/domains/vkovalov/components/home/Positions.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar Positions = /*#__PURE__*/function (_React$Component) {\n  _inherits(Positions, _React$Component);\n\n  var _super = _createSuper(Positions);\n\n  function Positions(props) {\n    var _this;\n\n    _classCallCheck(this, Positions);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      positions: []\n    };\n    return _this;\n  }\n\n  _createClass(Positions, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, response, data, positions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = 'http://vkovalov.me/wp-json/wp/v2/pages/17';\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                positions = data.acf.positions.json;\n                console.log(positions);\n                this.setState({\n                  isLoaded: true,\n                  positions: positions\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          positions = _this$state.positions;\n\n      if (!isLoaded) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 16\n          }\n        }, \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\");\n      } else {\n        return __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }, positions.map(function (position) {\n          return __jsx(\"li\", {\n            key: position,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }\n          }, position);\n        }));\n      }\n    }\n  }]);\n\n  return Positions;\n}(React.Component);\n\nexport { Positions as default };","map":{"version":3,"sources":["/Users/user/Documents/domains/vkovalov/components/home/Positions.js"],"names":["React","Component","Positions","props","state","error","isLoaded","positions","url","fetch","response","json","data","acf","console","log","setState","map","position"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,S;;;;;AAEjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAFiB;AAOlB;;;;;;;;;;;AAGSC,gBAAAA,G,GAAM,2C;;uBACWC,KAAK,CAACD,GAAD,C;;;AAAtBE,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbC,gBAAAA,I;AACAL,gBAAAA,S,GAAYK,IAAI,CAACC,GAAL,CAASN,SAAT,CAAmBI,I;AACrCG,gBAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,qBAAKS,QAAL,CAAc;AACVV,kBAAAA,QAAQ,EAAE,IADA;AAEVC,kBAAAA,SAAS,EAAEA;AAFD,iBAAd;;;;;;;;;;;;;;;;;;6BAMK;AAAA;;AAAA,wBACyB,KAAKH,KAD9B;AAAA,UACCE,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;;AAEP,UAAI,CAACD,QAAL,EAAe;AACb,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,SAAS,CAACU,GAAV,CAAc,UAAAC,QAAQ;AAAA,iBACrB;AAAI,YAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,QADH,CADqB;AAAA,SAAtB,CADH,CADF;AASD;AACF;;;;EAtCkClB,KAAK,CAACC,S;;SAAxBC,S","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Positions extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        positions: []\n      };\n    }\n  \n    async componentDidMount() {\n        const url = 'http://vkovalov.me/wp-json/wp/v2/pages/17';\n        const response = await fetch(url);\n        const data = await response.json();\n        const positions = data.acf.positions.json;\n        console.log(positions);\n        this.setState({\n            isLoaded: true,\n            positions: positions\n        });\n    }\n  \n    render() {\n      const { isLoaded, positions } = this.state;\n      if (!isLoaded) {\n        return <div>Завантаження...</div>;\n      } else {\n        return (\n          <ul>\n            {positions.map(position => (\n              <li key={position}>\n                {position}\n              </li>\n            ))}\n          </ul>\n        );\n      }\n    }\n  }"]},"metadata":{},"sourceType":"module"}