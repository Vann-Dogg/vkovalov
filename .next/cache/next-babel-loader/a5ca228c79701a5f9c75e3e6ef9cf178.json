{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/user/Documents/domains/vkovalov/components/services/ServicesCards.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as ReactBS from 'react-bootstrap';\n\nvar ServicesCards = /*#__PURE__*/function (_React$Component) {\n  _inherits(ServicesCards, _React$Component);\n\n  var _super = _createSuper(ServicesCards);\n\n  function ServicesCards(props) {\n    var _this;\n\n    _classCallCheck(this, ServicesCards);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      services: []\n    };\n    return _this;\n  }\n\n  _createClass(ServicesCards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://vkovalov.me/wp-json/wp/v2/services\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result.services\n        });\n      }, // Примітка: важливо обробляти помилки саме тут,\n      // а не в блоці catch (), щоб не перехоплювати\n      // виключення з помилок в самих компонентах.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          services = _this$state.services;\n\n      if (error) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 14\n          }\n        }, \"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430: \", error.message);\n      } else if (!isLoaded) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }\n        }, \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\");\n      } else {\n        return __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }, services.map(function (service) {\n          return __jsx(\"li\", {\n            key: service.title,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }\n          }, service.title);\n        }));\n      }\n    }\n  }]);\n\n  return ServicesCards;\n}(React.Component);","map":{"version":3,"sources":["/Users/user/Documents/domains/vkovalov/components/services/ServicesCards.js"],"names":["React","Component","ReactBS","ServicesCards","props","state","error","isLoaded","services","fetch","then","res","json","result","setState","items","message","map","service","title"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZQ,UAAAA,KAAK,EAAEF,MAAM,CAACL;AAFF,SAAd;AAID,OARL,EASI;AACA;AACA;AACA,gBAACF,KAAD,EAAW;AACT,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAjBL;AAmBD;;;6BAEQ;AAAA;;AAAA,wBAC+B,KAAKD,KADpC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,QADlB,eACkBA,QADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAeA,KAAK,CAACU,OAArB,CAAP;AACD,OAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,QAAQ,CAACS,GAAT,CAAa,UAAAC,OAAO;AAAA,iBACnB;AAAI,YAAA,GAAG,EAAEA,OAAO,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,OAAO,CAACC,KADX,CADmB;AAAA,SAApB,CADH,CADF;AASD;AACF;;;;EAjDyBnB,KAAK,CAACC,S","sourcesContent":["import React, { Component } from 'react'\nimport * as ReactBS from 'react-bootstrap'\n\nclass ServicesCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      services: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://vkovalov.me/wp-json/wp/v2/services\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.services\n          });\n        },\n        // Примітка: важливо обробляти помилки саме тут,\n        // а не в блоці catch (), щоб не перехоплювати\n        // виключення з помилок в самих компонентах.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, services } = this.state;\n    if (error) {\n      return <div>Помилка: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Завантаження...</div>;\n    } else {\n      return (\n        <ul>\n          {services.map(service => (\n            <li key={service.title}>\n              {service.title}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}