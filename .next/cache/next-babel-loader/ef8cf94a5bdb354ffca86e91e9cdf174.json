{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/domains/vkovalov/components/services/ServicesCards.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; //import * as ReactBS from 'react-bootstrap'\n\nexport default class ServicesCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      services: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://vkovalov.me/wp-json/wp/v2/services\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.services\n      });\n    }, // Примітка: важливо обробляти помилки саме тут,\n    // а не в блоці catch (), щоб не перехоплювати\n    // виключення з помилок в самих компонентах.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      services\n    } = this.state;\n\n    if (error) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      }, \"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430: \", error.message);\n    } else if (!isLoaded) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }\n      }, \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\");\n    } else {\n      return __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, services.map(service => __jsx(\"li\", {\n        key: service.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, service.id)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Documents/domains/vkovalov/components/services/ServicesCards.js"],"names":["React","Component","ServicesCards","constructor","props","state","error","isLoaded","services","componentDidMount","fetch","then","res","json","result","setState","items","render","message","map","service","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACC,SAAlC,CAA4C;AAEzDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZS,QAAAA,KAAK,EAAEF,MAAM,CAACN;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAAgC,KAAKH,KAA3C;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAeA,KAAK,CAACY,OAArB,CAAP;AACD,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAAP;AACD,KAFM,MAEA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,QAAQ,CAACW,GAAT,CAAaC,OAAO,IACnB;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,OAAO,CAACC,EADX,CADD,CADH,CADF;AASD;AACF;;AAlDwD","sourcesContent":["import React, { Component } from 'react'\n//import * as ReactBS from 'react-bootstrap'\n\nexport default class ServicesCards extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      services: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://vkovalov.me/wp-json/wp/v2/services\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.services\n          });\n        },\n        // Примітка: важливо обробляти помилки саме тут,\n        // а не в блоці catch (), щоб не перехоплювати\n        // виключення з помилок в самих компонентах.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, services } = this.state;\n    if (error) {\n      return <div>Помилка: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Завантаження...</div>;\n    } else {\n      return (\n        <ul>\n          {services.map(service => (\n            <li key={service.id}>\n              {service.id}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}